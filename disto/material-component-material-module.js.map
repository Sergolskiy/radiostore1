{"version":3,"sources":["webpack:///./src/app/material-component/buttons/buttons.component.html","webpack:///./src/app/material-component/buttons/buttons.component.scss","webpack:///./src/app/material-component/buttons/buttons.component.ts","webpack:///./src/app/material-component/chips/chips.component.html","webpack:///./src/app/material-component/chips/chips.component.scss","webpack:///./src/app/material-component/chips/chips.component.ts","webpack:///./src/app/material-component/dialog/dialog.component.html","webpack:///./src/app/material-component/dialog/dialog.component.scss","webpack:///./src/app/material-component/dialog/dialog.component.ts","webpack:///./src/app/material-component/expansion/expansion.component.html","webpack:///./src/app/material-component/expansion/expansion.component.scss","webpack:///./src/app/material-component/expansion/expansion.component.ts","webpack:///./src/app/material-component/grid/grid.component.html","webpack:///./src/app/material-component/grid/grid.component.scss","webpack:///./src/app/material-component/grid/grid.component.ts","webpack:///./src/app/material-component/lists/lists.component.html","webpack:///./src/app/material-component/lists/lists.component.scss","webpack:///./src/app/material-component/lists/lists.component.ts","webpack:///./src/app/material-component/material.module.ts","webpack:///./src/app/material-component/material.routing.ts","webpack:///./src/app/material-component/menu/menu.component.html","webpack:///./src/app/material-component/menu/menu.component.scss","webpack:///./src/app/material-component/menu/menu.component.ts","webpack:///./src/app/material-component/progress-snipper/progress-snipper.component.html","webpack:///./src/app/material-component/progress-snipper/progress-snipper.component.scss","webpack:///./src/app/material-component/progress-snipper/progress-snipper.component.ts","webpack:///./src/app/material-component/progress/progress.component.html","webpack:///./src/app/material-component/progress/progress.component.scss","webpack:///./src/app/material-component/progress/progress.component.ts","webpack:///./src/app/material-component/slide-toggle/slide-toggle.component.html","webpack:///./src/app/material-component/slide-toggle/slide-toggle.component.scss","webpack:///./src/app/material-component/slide-toggle/slide-toggle.component.ts","webpack:///./src/app/material-component/slider/slider.component.html","webpack:///./src/app/material-component/slider/slider.component.scss","webpack:///./src/app/material-component/slider/slider.component.ts","webpack:///./src/app/material-component/snackbar/snackbar.component.html","webpack:///./src/app/material-component/snackbar/snackbar.component.scss","webpack:///./src/app/material-component/snackbar/snackbar.component.ts","webpack:///./src/app/material-component/stepper/stepper.component.html","webpack:///./src/app/material-component/stepper/stepper.component.scss","webpack:///./src/app/material-component/stepper/stepper.component.ts","webpack:///./src/app/material-component/tabs/tabs.component.html","webpack:///./src/app/material-component/tabs/tabs.component.scss","webpack:///./src/app/material-component/tabs/tabs.component.ts","webpack:///./src/app/material-component/toolbar/toolbar.component.html","webpack:///./src/app/material-component/toolbar/toolbar.component.scss","webpack:///./src/app/material-component/toolbar/toolbar.component.ts","webpack:///./src/app/material-component/tooltip/tooltip.component.html","webpack:///./src/app/material-component/tooltip/tooltip.component.scss","webpack:///./src/app/material-component/tooltip/tooltip.component.ts","webpack:///./src/app/material-component/users/users.component.html","webpack:///./src/app/material-component/users/users.component.scss","webpack:///./src/app/material-component/users/users.component.ts","webpack:///./src/app/services/user.service.ts"],"names":[],"mappings":"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","file":"material-component-material-module.js","sourcesContent":["module.exports = \"<mat-card>\\r\\n  <mat-card-content>    \\r\\n  <mat-card-title>Buttons</mat-card-title>\\r\\n      <mat-card-subtitle>Angular Material buttons are native <code> button or a </code> elements enhanced with Material Design styling and ink ripples. <code><a href=\\\"https://material.angular.io/components/button/overview\\\" target=\\\"_blank\\\">Official Doc</a></code></mat-card-subtitle>\\r\\n  \\r\\n      <h4>Basic Buttons <br/><code class=\\\"bg-light\\\">&lt;button mat-button color=\\\"primary\\\"&gt;Primary&lt;/button&gt;</code></h4>\\r\\n    <div class=\\\"button-row\\\">\\r\\n      <button mat-button>Basic</button>\\r\\n      <button mat-button color=\\\"primary\\\">Primary</button>\\r\\n      <button mat-button color=\\\"accent\\\">Accent</button>\\r\\n      <button mat-button color=\\\"warn\\\">Warn</button>\\r\\n      <button mat-button disabled>Disabled</button>\\r\\n      <a mat-button routerLink=\\\".\\\">Link</a>\\r\\n    </div>\\r\\n\\r\\n    <h4>Raised Buttons <br/><code class=\\\"bg-light\\\">&lt;button mat-raised-button color=\\\"primary\\\"&gt;Primary&lt;/button&gt;</code></h4>\\r\\n    <div class=\\\"button-row\\\">\\r\\n      <button mat-raised-button>Basic</button>\\r\\n      <button mat-raised-button color=\\\"primary\\\">Primary</button>\\r\\n      <button mat-raised-button color=\\\"accent\\\">Accent</button>\\r\\n      <button mat-raised-button color=\\\"warn\\\">Warn</button>\\r\\n      <button mat-raised-button disabled>Disabled</button>\\r\\n      <a mat-raised-button routerLink=\\\".\\\">Link</a>\\r\\n    </div>\\r\\n\\r\\n    <h4>Icon Buttons <br/><code class=\\\"bg-light\\\">&lt;button mat-icon-button color=\\\"primary\\\"&gt; <br/>&nbsp;&nbsp;&nbsp;&nbsp;&lt;mat-icon aria-label=\\\"Example icon-button with a heart icon\\\"&gt;favorite&lt;/mat-icon&gt;<br/>&lt;/button&gt;</code></h4>\\r\\n    <div class=\\\"button-row\\\">\\r\\n      <button mat-icon-button>\\r\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\r\\n      </button>\\r\\n      <button mat-icon-button color=\\\"primary\\\">\\r\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\r\\n      </button>\\r\\n      <button mat-icon-button color=\\\"accent\\\">\\r\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\r\\n      </button>\\r\\n      <button mat-icon-button color=\\\"warn\\\">\\r\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\r\\n      </button>\\r\\n      <button mat-icon-button disabled>\\r\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <h4>Fab Buttons <br/><code class=\\\"bg-light\\\">&lt;button mat-fab color=\\\"primary\\\"&gt;Primary&lt;/button&gt;</code></h4>\\r\\n    <div class=\\\"button-row\\\">\\r\\n      <button mat-fab>Basic</button>\\r\\n      <button mat-fab color=\\\"primary\\\">Primary</button>\\r\\n      <button mat-fab color=\\\"accent\\\">Accent</button>\\r\\n      <button mat-fab color=\\\"warn\\\">Warn</button>\\r\\n      <button mat-fab disabled>Disabled</button>\\r\\n      <button mat-fab>\\r\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\r\\n      </button>\\r\\n      <a mat-fab routerLink=\\\".\\\">Link</a>\\r\\n    </div>\\r\\n\\r\\n    <h4>Mini Fab Buttons <br/><code class=\\\"bg-light\\\">&lt;button mat-mini-fab color=\\\"primary\\\"&gt;Primary&lt;/button&gt;</code></h4>\\r\\n    <div class=\\\"button-row\\\">\\r\\n      <button mat-mini-fab>Base</button>\\r\\n      <button mat-mini-fab color=\\\"primary\\\">Pri</button>\\r\\n      <button mat-mini-fab color=\\\"accent\\\">Acc</button>\\r\\n      <button mat-mini-fab color=\\\"warn\\\">Warn</button>\\r\\n      <button mat-mini-fab disabled>Dis</button>\\r\\n      <button mat-mini-fab>\\r\\n        <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>\\r\\n      </button>\\r\\n      <a mat-mini-fab routerLink=\\\".\\\">Link</a>\\r\\n    </div>\\r\\n    <h4>Button toggle </h4>  \\r\\n    <mat-button-toggle-group #group=\\\"matButtonToggleGroup\\\">\\r\\n      <mat-button-toggle value=\\\"left\\\">\\r\\n        <mat-icon>format_align_left</mat-icon>\\r\\n      </mat-button-toggle>\\r\\n      <mat-button-toggle value=\\\"center\\\">\\r\\n        <mat-icon>format_align_center</mat-icon>\\r\\n      </mat-button-toggle>\\r\\n      <mat-button-toggle value=\\\"right\\\">\\r\\n        <mat-icon>format_align_right</mat-icon>\\r\\n      </mat-button-toggle>\\r\\n      <mat-button-toggle value=\\\"justify\\\" disabled>\\r\\n        <mat-icon>format_align_justify</mat-icon>\\r\\n      </mat-button-toggle>\\r\\n    </mat-button-toggle-group>\\r\\n    <div class=\\\"m-t-20\\\">Selected value: {{group.value}}</div>  \\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","module.exports = \".example-button-row {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-around; }\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-buttons',\r\n  templateUrl: './buttons.component.html',\r\n  styleUrls: ['./buttons.component.scss']\r\n})\r\nexport class ButtonsComponent {\r\n  constructor() { }\r\n}\r\n","module.exports = \"\\r\\n  <mat-card>\\r\\n    <mat-card-content>  \\r\\n    <mat-card-title>Basic Chips</mat-card-title>\\r\\n    <mat-card-subtitle><code>&lt;mat-chip&gt;</code>displays a list of values as individual, keyboard accessible, chips. <code class=\\\"\\\"><a href=\\\"https://material.angular.io/components/chips/overview\\\">Official Component</a></code></mat-card-subtitle>\\r\\n    <mat-chip-list>\\r\\n      <mat-chip>One fish</mat-chip>\\r\\n      <mat-chip>Two fish</mat-chip>\\r\\n      <mat-chip color=\\\"primary\\\" selected=\\\"true\\\">Primary fish</mat-chip>\\r\\n      <mat-chip color=\\\"accent\\\" selected=\\\"true\\\">Accent fish</mat-chip>\\r\\n    </mat-chip-list>\\r\\n\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n\\r\\n  <mat-card>\\r\\n    <mat-card-content>  \\r\\n    <mat-card-title>Chip input</mat-card-title>\\r\\n    <mat-card-subtitle>The MatChipInput directive can be used together with a chip-list to streamline the interaction between the two components. This directive adds chip-specific behaviors to the input element within for adding and removing chips. </mat-card-subtitle>\\r\\n    \\r\\n      <mat-form-field class=\\\"demo-chip-list\\\">\\r\\n          <mat-chip-list #chipList>\\r\\n            <mat-chip *ngFor=\\\"let fruit of fruits\\\" [selectable]=\\\"selectable\\\"\\r\\n                     [removable]=\\\"removable\\\" (removed)=\\\"remove(fruit)\\\">\\r\\n              {{fruit.name}}\\r\\n              <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n            </mat-chip>\\r\\n            <input placeholder=\\\"New fruit...\\\"\\r\\n                   [matChipInputFor]=\\\"chipList\\\"\\r\\n                   [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\r\\n                   [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\r\\n                   (matChipInputTokenEnd)=\\\"add($event)\\\" />\\r\\n          </mat-chip-list>\\r\\n        </mat-form-field>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n\\r\\n  <mat-card>\\r\\n    <mat-card-content>  \\r\\n    <mat-card-title>Stacked Chips</mat-card-title>\\r\\n    <mat-card-subtitle>You can also stack the chips if you want them on top of each other and/or use the\\r\\n        <code>(focus)</code> event to run custom code.</mat-card-subtitle>\\r\\n    \\r\\n      <mat-chip-list class=\\\"mat-chip-list-stacked\\\">\\r\\n        <mat-chip *ngFor=\\\"let aColor of availableColors\\\"\\r\\n                 (focus)=\\\"color = aColor.color\\\" color=\\\"{{aColor.color}}\\\" selected=\\\"true\\\">\\r\\n          {{aColor.name}}\\r\\n        </mat-chip>\\r\\n      </mat-chip-list>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n\"","module.exports = \".demo-chip-list {\\n  width: 100%; }\\n\"","import { Component } from '@angular/core';\r\nimport {MatChipInputEvent} from '@angular/material';\r\nimport {ENTER, COMMA} from '@angular/cdk/keycodes' \r\nexport interface DemoColor {\r\n  name: string;\r\n  color: string;\r\n}\r\n@Component({\r\n  selector: 'app-chips',\r\n  templateUrl: './chips.component.html',\r\n  styleUrls: ['./chips.component.scss']\r\n})\r\nexport class ChipsComponent{\r\n\r\n  visible: boolean = true;\r\n  selectable: boolean = true;\r\n  removable: boolean = true;\r\n  addOnBlur: boolean = true;\r\n\r\n  // Enter, comma\r\n  separatorKeysCodes = [ENTER, COMMA];\r\n\r\n  fruits = [\r\n    { name: 'Lemon' },\r\n    { name: 'Lime' },\r\n    { name: 'Apple' },\r\n  ];\r\n\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    let input = event.input;\r\n    let value = event.value;\r\n\r\n    // Add our fruit\r\n    if ((value || '').trim()) {\r\n      this.fruits.push({ name: value.trim() });\r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n  }\r\n\r\n  remove(fruit: any): void {\r\n    let index = this.fruits.indexOf(fruit);\r\n\r\n    if (index >= 0) {\r\n      this.fruits.splice(index, 1);\r\n    }\r\n  }\r\n    \r\n    availableColors: DemoColor[] = [\r\n        { name: 'none', color: 'gray' },\r\n        { name: 'Primary', color: 'primary' },\r\n        { name: 'Accent', color: 'accent' },\r\n        { name: 'Warn', color: 'warn' }\r\n      ];\r\n}\r\n","module.exports = \"<!-- ============================================================== -->\\r\\n<!-- Fixed height Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row\\\">\\r\\n    <div fxFlex.gt-sm=\\\"100%\\\" >\\r\\n        <mat-card> \\r\\n            <mat-card-content>\\r\\n              <mat-card-title>Dialog Overview</mat-card-title>\\r\\n              <mat-card-subtitle>The <code>&lt;MatDialog&gt;</code>  service can be used to open modal dialogs with Material Design styling and animations.</mat-card-subtitle>\\r\\n              <ol>\\r\\n                  <li>\\r\\n                    <mat-form-field>\\r\\n                      <input matInput [(ngModel)]=\\\"name\\\" placeholder=\\\"What's your name?\\\">\\r\\n                    </mat-form-field>\\r\\n                  </li>\\r\\n                  <li>\\r\\n                    <button mat-raised-button (click)=\\\"openDialog()\\\">Pick one</button>\\r\\n                  </li>\\r\\n                  <li *ngIf=\\\"animal\\\">\\r\\n                    You chose: <i>{{animal}}</i>\\r\\n                  </li>\\r\\n                </ol>  \\r\\n            </mat-card-content>        \\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>    \\r\\n<!-- ============================================================== -->\\r\\n<!-- Basic Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n\\r\\n\"","module.exports = \"\"","import {Component, Inject} from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.scss']\r\n})\r\nexport class DialogComponent {\r\n  animal: string;\r\n  name: string;\r\n\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  openDialog(): void {\r\n    let dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\r\n      width: '250px',\r\n      data: { name: this.name, animal: this.animal }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.animal = result;\r\n    });\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-overview-example-dialog',\r\n  template: `<h1 mat-dialog-title>Hi {{data.name}}</h1>\r\n<div mat-dialog-content>\r\n  <p>What's your favorite animal?</p>\r\n  <mat-form-field>\r\n    <input matInput tabindex=\"1\" [(ngModel)]=\"data.animal\">\r\n  </mat-form-field>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button [mat-dialog-close]=\"data.animal\" tabindex=\"2\">Ok</button>\r\n  <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">No Thanks</button>\r\n</div>`\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  onNoClick(): void { \r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","module.exports = \"<!-- ============================================================== -->\\r\\n<!-- Basic-->\\r\\n<!-- ============================================================== -->\\r\\n<mat-card>\\r\\n    <mat-card-content>\\r\\n        <mat-card-title>Basic Expansion</mat-card-title>\\r\\n        <mat-card-subtitle>Expansion panel <code class=\\\"\\\"><a href=\\\"https://material.angular.io/components/expansion/overview\\\">Official Component</a></code></mat-card-subtitle>\\r\\n        <mat-accordion>\\r\\n            <mat-expansion-panel>\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title> Personal data </mat-panel-title>\\r\\n                    <mat-panel-description> Type your name and age </mat-panel-description>\\r\\n                </mat-expansion-panel-header>\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"First name\\\"> </mat-form-field>\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Age\\\"> </mat-form-field>\\r\\n            </mat-expansion-panel>\\r\\n            <mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\">\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title> Self aware panel </mat-panel-title>\\r\\n                    <mat-panel-description> Currently I am {{panelOpenState ? 'open' : 'closed'}} </mat-panel-description>\\r\\n                </mat-expansion-panel-header>\\r\\n                <p>I'm visible because I am open</p>\\r\\n            </mat-expansion-panel>\\r\\n        </mat-accordion>\\r\\n    </mat-card-content>\\r\\n</mat-card>\\r\\n<!-- ============================================================== -->\\r\\n<!-- As an Accordion -->\\r\\n<!-- ============================================================== -->\\r\\n<mat-card>\\r\\n    <mat-card-content>\\r\\n    <mat-card-title>Accordion</mat-card-title>\\r\\n    <mat-card-subtitle>Expansion panel</mat-card-subtitle>\\r\\n    \\r\\n        <mat-accordion class=\\\"example-headers-align\\\">\\r\\n            <mat-expansion-panel [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\" hideToggle=\\\"true\\\">\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title> Personal data </mat-panel-title>\\r\\n                    <mat-panel-description> Type your name and age\\r\\n                        <mat-icon>account_circle</mat-icon>\\r\\n                    </mat-panel-description>\\r\\n                </mat-expansion-panel-header>\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"First name\\\"> </mat-form-field>\\r\\n                <mat-form-field>\\r\\n                    <input matInput type=\\\"number\\\" min=\\\"1\\\" placeholder=\\\"Age\\\"> </mat-form-field>\\r\\n                <mat-action-row>\\r\\n                    <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n                </mat-action-row>\\r\\n            </mat-expansion-panel>\\r\\n            <mat-expansion-panel [expanded]=\\\"step === 1\\\" (opened)=\\\"setStep(1)\\\" hideToggle=\\\"true\\\">\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title> Destination </mat-panel-title>\\r\\n                    <mat-panel-description> Type the country name\\r\\n                        <mat-icon>map</mat-icon>\\r\\n                    </mat-panel-description>\\r\\n                </mat-expansion-panel-header>\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Country\\\"> </mat-form-field>\\r\\n                <mat-action-row>\\r\\n                    <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n                    <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n                </mat-action-row>\\r\\n            </mat-expansion-panel>\\r\\n            <mat-expansion-panel [expanded]=\\\"step === 2\\\" (opened)=\\\"setStep(2)\\\" hideToggle=\\\"true\\\">\\r\\n                <mat-expansion-panel-header>\\r\\n                    <mat-panel-title> Day of the trip </mat-panel-title>\\r\\n                    <mat-panel-description> Inform the date you wish to travel\\r\\n                        <mat-icon>date_range</mat-icon>\\r\\n                    </mat-panel-description>\\r\\n                </mat-expansion-panel-header>\\r\\n                <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Date\\\" [matDatepicker]=\\\"picker\\\" (focus)=\\\"picker.open()\\\" readonly> </mat-form-field>\\r\\n                <mat-datepicker #picker></mat-datepicker>\\r\\n                <mat-action-row>\\r\\n                    <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n                    <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">End</button>\\r\\n                </mat-action-row>\\r\\n            </mat-expansion-panel>\\r\\n        </mat-accordion>\\r\\n    </mat-card-content>\\r\\n</mat-card>\"","module.exports = \".example-headers-align .mat-expansion-panel-header-title,\\n.example-headers-align .mat-expansion-panel-header-description {\\n  flex-basis: 0; }\\n\\n.example-headers-align .mat-expansion-panel-header-description {\\n  justify-content: space-between;\\n  align-items: center; }\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-expansion',\r\n  templateUrl: './expansion.component.html',\r\n  styleUrls: ['./expansion.component.scss']\r\n})\r\nexport class ExpansionComponent {\r\n  panelOpenState: boolean = false;    \r\n  step = 0;\r\n\r\n  setStep(index: number) {\r\n    this.step = index;\r\n  }\r\n\r\n  nextStep() {\r\n    this.step++;\r\n  }\r\n\r\n  prevStep() {\r\n    this.step--;\r\n  }\r\n}\r\n","module.exports = \"<!-- ============================================================== -->\\r\\n<!-- Fixed height Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row\\\">\\r\\n    <div fxFlex.gt-sm=\\\"100%\\\" >\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n              <mat-card-title>Fixed height grid-list</mat-card-title>\\r\\n                <mat-card-subtitle><code>&lt;mat-grid-list&gt;</code> is a two-dimensional list view that arranges cells into grid-based layout. See Material Design spec. <code><a href=\\\"https://material.io/guidelines/components/grid-lists.html\\\">Official Doc here</a></code></mat-card-subtitle>\\r\\n              <mat-grid-list cols=\\\"4\\\" rowHeight=\\\"100px\\\">\\r\\n                  <mat-grid-tile\\r\\n                      *ngFor=\\\"let tile of tiles\\\"\\r\\n                      [colspan]=\\\"tile.cols\\\"\\r\\n                      [rowspan]=\\\"tile.rows\\\"\\r\\n                      [style.background]=\\\"tile.color\\\">\\r\\n                    {{tile.text}}\\r\\n                  </mat-grid-tile>\\r\\n                </mat-grid-list>  \\r\\n            </mat-card-content>        \\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>    \\r\\n<!-- ============================================================== -->\\r\\n<!-- Basic Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n<mat-card>\\r\\n    <mat-card-content>\\r\\n      <mat-card-title>Basic grid-list</mat-card-title>\\r\\n      <mat-card-subtitle><code>&lt;mat-grid-list&gt;</code> is a two-dimensional list view that arranges cells into grid-based layout. See Material Design spec. <a href=\\\"https://material.io/guidelines/components/grid-lists.html\\\">here</a></mat-card-subtitle>\\r\\n      <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"2:1\\\">\\r\\n        <mat-grid-tile>1</mat-grid-tile>\\r\\n        <mat-grid-tile>2</mat-grid-tile>\\r\\n        <mat-grid-tile>3</mat-grid-tile>\\r\\n        <mat-grid-tile>4</mat-grid-tile>\\r\\n      </mat-grid-list>  \\r\\n    </mat-card-content>        \\r\\n</mat-card>\\r\\n\"","module.exports = \"mat-grid-tile {\\n  background: lightblue; }\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-grid',\r\n  templateUrl: './grid.component.html',\r\n  styleUrls: ['./grid.component.scss']\r\n})\r\nexport class GridComponent {\r\n\r\n  tiles: any[] = [{\r\n    text: 'One',\r\n    cols: 3,\r\n    rows: 1,\r\n    color: 'lightblue'\r\n  }, {\r\n    text: 'Two',\r\n    cols: 1,\r\n    rows: 2,\r\n    color: 'lightgreen'\r\n  }, {\r\n    text: 'Three',\r\n    cols: 1,\r\n    rows: 1,\r\n    color: 'lightpink'\r\n  }, {\r\n    text: 'Four',\r\n    cols: 2,\r\n    rows: 1,\r\n    color: '#DDBDF1'\r\n  }];\r\n\r\n  \r\n}\r\n","module.exports = \"<!-- ============================================================== -->\\r\\n<!-- Fixed height Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row\\\">\\r\\n    <div fxFlex.gt-sm=\\\"100%\\\" >\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n              <mat-card-title>Basic list</mat-card-title>\\r\\n              <mat-card-subtitle><code>&lt;mat-list&gt;</code> is a container component that wraps and formats a series of line items. As the base list component, it provides Material Design styling, but no behavior of its own.<code><a href=\\\"https://material.angular.io/components/list/overview\\\">Official Doc here</a></code></mat-card-subtitle>\\r\\n              <mat-list role=\\\"list\\\">\\r\\n                <mat-list-item role=\\\"listitem\\\">Item 1</mat-list-item>\\r\\n                <mat-list-item role=\\\"listitem\\\">Item 2</mat-list-item>\\r\\n                <mat-list-item role=\\\"listitem\\\">Item 3</mat-list-item>\\r\\n              </mat-list>\\r\\n            </mat-card-content>        \\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- ============================================================== -->\\r\\n<!-- List with selection-->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row\\\">\\r\\n    <div fxFlex.gt-sm=\\\"50%\\\" >\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n              <mat-card-title>List with selection</mat-card-title>\\r\\n              <mat-card-subtitle>A selection list provides an interface for selecting values, where each list item is an option.</mat-card-subtitle>\\r\\n              <mat-selection-list #shoes>\\r\\n                 <mat-list-option *ngFor=\\\"let shoe of typesOfShoes\\\">\\r\\n                    {{shoe}}\\r\\n                 </mat-list-option>\\r\\n              </mat-selection-list>\\r\\n              <p>\\r\\n                  Options selected: {{shoes.selectedOptions.selected.length}}\\r\\n              </p>    \\r\\n            </mat-card-content>        \\r\\n        </mat-card>\\r\\n    </div>\\r\\n    <div fxFlex.gt-sm=\\\"50%\\\" >\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n              <mat-card-title>Multiline lists</mat-card-title>\\r\\n              <mat-card-subtitle>A selection list provides an interface for selecting values, where each list item is an option.</mat-card-subtitle>\\r\\n              <mat-list>\\r\\n                <mat-list-item *ngFor=\\\"let message of messages\\\">\\r\\n                  <h3 matLine>{{message.from}}</h3>\\r\\n                  <p matLine class=\\\"text-muted\\\">{{message.subject}}</p>\\r\\n                  <p matLine class=\\\"text-muted\\\">{{message.content}}</p>    \\r\\n                </mat-list-item>\\r\\n              </mat-list>    \\r\\n            </mat-card-content>        \\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- ============================================================== -->\\r\\n<!-- List with icons selection-->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row\\\">\\r\\n    <div fxFlex.gt-sm=\\\"100%\\\" >\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n              <mat-card-title>Multiline lists</mat-card-title>\\r\\n              <mat-card-subtitle>A selection list provides an interface for selecting values, where each list item is an option.</mat-card-subtitle>\\r\\n              <mat-list>\\r\\n                <mat-list-item *ngFor=\\\"let message of messages\\\">\\r\\n                  <img mat-list-avatar [src]=\\\"message.image\\\" alt=\\\"Image of {{message.from}}\\\">    \\r\\n                  <h3 matLine>{{message.from}}</h3>\\r\\n                  <p matLine class=\\\"text-muted\\\">{{message.content}}</p>     \\r\\n                </mat-list-item>\\r\\n              </mat-list>    \\r\\n            </mat-card-content>        \\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div> \\r\\n<!-- ============================================================== -->\\r\\n<!-- List with icons selection-->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row\\\">\\r\\n    <div fxFlex.gt-sm=\\\"100%\\\" >\\r\\n        <mat-card>\\r\\n            <mat-card-content class=\\\"p-b-0 m-b-0\\\">\\r\\n              <mat-card-title>List with sections</mat-card-title>\\r\\n              <mat-card-subtitle>A selection list provides an interface for selecting values, where each list item is an option.</mat-card-subtitle>\\r\\n            </mat-card-content>   \\r\\n                <mat-list>\\r\\n                <mat-card-content class=\\\"p-t-0\\\">    \\r\\n                  <h3 mat-subheader>Folders</h3>\\r\\n                  <mat-list-item *ngFor=\\\"let folder of folders\\\">\\r\\n                    <mat-icon mat-list-icon>folder</mat-icon>\\r\\n                    <h4 mat-line>{{folder.name}}</h4>\\r\\n                    <p mat-line> {{folder.updated | date}} </p>\\r\\n                  </mat-list-item>\\r\\n                </mat-card-content>   \\r\\n                   \\r\\n                  <mat-divider></mat-divider>\\r\\n                <mat-card-content>    \\r\\n                  <h3 mat-subheader>Notes</h3>\\r\\n                  <mat-list-item *ngFor=\\\"let note of notes\\\">\\r\\n                    <mat-icon mat-list-icon>note</mat-icon>\\r\\n                    <h4 mat-line>{{note.name}}</h4>\\r\\n                    <p mat-line> {{note.updated | date}} </p>\\r\\n                  </mat-list-item>\\r\\n                </mat-card-content>      \\r\\n                </mat-list>    \\r\\n                  \\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-lists',\r\n  templateUrl: './lists.component.html',\r\n  styleUrls: ['./lists.component.scss']\r\n})\r\nexport class ListsComponent {\r\n  typesOfShoes = ['Boots', 'Clogs', 'Loafers', 'Moccasins', 'Sneakers'];\r\n  messages: any[] = [{\r\n    from: 'Nirav joshi (nbj@gmail.com)',\r\n    image: 'assets/images/users/1.jpg',  \r\n    subject: 'Material angular',\r\n    content: 'This is the material angular template'  \r\n  }, {\r\n    from: 'Sunil joshi (sbj@gmail.com)',\r\n    image: 'assets/images/users/2.jpg',    \r\n    subject: 'Wrappixel',\r\n    content: 'We have wrappixel launched' \r\n  }, {\r\n    from: 'Vishal Bhatt (bht@gmail.com)',\r\n    image: 'assets/images/users/3.jpg',    \r\n    subject: 'Task list',\r\n    content: 'This is the latest task hasbeen done'  \r\n  }]; \r\n    \r\n  folders = [\r\n    {\r\n      name: 'Photos',\r\n      updated: new Date('1/1/16'),\r\n    },\r\n    {\r\n      name: 'Recipes',\r\n      updated: new Date('1/17/16'),\r\n    },\r\n    {\r\n      name: 'Work',\r\n      updated: new Date('1/28/16'),\r\n    }\r\n  ];\r\n  notes = [\r\n    {\r\n      name: 'Vacation Itinerary',\r\n      updated: new Date('2/20/16'),\r\n    },\r\n    {\r\n      name: 'Kitchen Remodel',\r\n      updated: new Date('1/18/16'),\r\n    }\r\n  ];    \r\n\r\n}\r\n","import 'hammerjs';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DemoMaterialModule} from '../demo-material-module';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { MaterialRoutes } from './material.routing';\r\nimport { ButtonsComponent } from './buttons/buttons.component';\r\n\r\nimport { GridComponent } from './grid/grid.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { TabsComponent } from './tabs/tabs.component';\r\nimport { StepperComponent } from './stepper/stepper.component';\r\nimport { ExpansionComponent } from './expansion/expansion.component';\r\nimport { ChipsComponent } from './chips/chips.component';\r\nimport { ToolbarComponent } from './toolbar/toolbar.component';\r\nimport { ProgressSnipperComponent } from './progress-snipper/progress-snipper.component';\r\nimport { ProgressComponent } from './progress/progress.component';\r\nimport { DialogComponent, DialogOverviewExampleDialog } from './dialog/dialog.component';\r\nimport { TooltipComponent } from './tooltip/tooltip.component';\r\nimport { SnackbarComponent } from './snackbar/snackbar.component';\r\nimport { SliderComponent } from './slider/slider.component';\r\nimport { SlideToggleComponent } from './slide-toggle/slide-toggle.component';\r\n\r\nimport { UsersComponent } from './users/users.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(MaterialRoutes),\r\n    DemoMaterialModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    CdkTableModule\r\n  ],\r\n  providers: [\r\n\r\n  ],\r\n  entryComponents: [\r\n    DialogOverviewExampleDialog\r\n  ],\r\n  declarations: [\r\n    ButtonsComponent,\r\n    GridComponent,\r\n    ListsComponent,\r\n    MenuComponent,\r\n    TabsComponent,\r\n    StepperComponent,\r\n    ExpansionComponent,\r\n    ChipsComponent,\r\n    ToolbarComponent,\r\n    ProgressSnipperComponent,\r\n    ProgressComponent,\r\n    DialogComponent,\r\n    DialogOverviewExampleDialog,\r\n    TooltipComponent,\r\n    SnackbarComponent,\r\n    SliderComponent,\r\n    SlideToggleComponent,\r\n      UsersComponent\r\n  ]\r\n})\r\n\r\nexport class MaterialComponentsModule {}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { ButtonsComponent } from './buttons/buttons.component';\r\nimport { GridComponent } from './grid/grid.component'; \r\nimport { ListsComponent } from './lists/lists.component'; \r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { TabsComponent } from './tabs/tabs.component'; \r\nimport { StepperComponent } from './stepper/stepper.component'; \r\nimport { ExpansionComponent } from './expansion/expansion.component'; \r\nimport { ChipsComponent } from './chips/chips.component'; \r\nimport { ToolbarComponent } from './toolbar/toolbar.component';\r\nimport { ProgressSnipperComponent } from './progress-snipper/progress-snipper.component'; \r\nimport { ProgressComponent } from './progress/progress.component';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { TooltipComponent } from './tooltip/tooltip.component'; \r\nimport { SnackbarComponent } from './snackbar/snackbar.component';\r\nimport { SliderComponent } from './slider/slider.component';\r\nimport { SlideToggleComponent } from './slide-toggle/slide-toggle.component';\r\nimport {UsersComponent} from \"./users/users.component\";\r\n\r\n\r\nexport const MaterialRoutes: Routes = [\r\n    {\r\n        path: 'users',\r\n        component: UsersComponent\r\n    }, {\r\n      path: 'button',\r\n      component: ButtonsComponent\r\n    }, {\r\n      path: 'grid',\r\n      component: GridComponent\r\n    }, {\r\n      path: 'lists',\r\n      component: ListsComponent\r\n    }, {\r\n      path: 'menu',\r\n      component: MenuComponent\r\n    }, {\r\n      path: 'tabs',\r\n      component: TabsComponent\r\n    }, {\r\n      path: 'stepper',\r\n      component: StepperComponent\r\n    }, {\r\n      path: 'expansion',\r\n      component: ExpansionComponent\r\n    }, {\r\n      path: 'chips',\r\n      component: ChipsComponent\r\n    }, {\r\n      path: 'toolbar',\r\n      component: ToolbarComponent\r\n    }, {\r\n      path: 'progress-snipper',\r\n      component: ProgressSnipperComponent\r\n    }, {\r\n      path: 'progress',\r\n      component: ProgressComponent\r\n    }, {\r\n      path: 'dialog',\r\n      component: DialogComponent\r\n    }, {\r\n      path: 'tooltip',\r\n      component: TooltipComponent\r\n    }, {\r\n      path: 'snackbar',\r\n      component: SnackbarComponent\r\n    }, {\r\n      path: 'slider',\r\n      component: SliderComponent\r\n    }, {\r\n      path: 'slide-toggle',\r\n      component: SlideToggleComponent\r\n    }\r\n];\r\n","module.exports = \"<!-- ============================================================== -->\\r\\n<!-- row -->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n    <!-- Card column -->\\r\\n    <div fxFlex.gt-sm=\\\"100%\\\" fxFlex=\\\"100\\\">\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n                <mat-card-title>Basic menu</mat-card-title>\\r\\n                <mat-card-subtitle><code>&lt;mat-menu&gt;</code> is a floating panel containing list of options.</mat-card-subtitle>\\r\\n                <button mat-button [matMenuTriggerFor]=\\\"menu\\\">Menu</button>\\r\\n                <mat-menu #menu=\\\"matMenu\\\">\\r\\n                  <button mat-menu-item>Item 1</button>\\r\\n                  <button mat-menu-item>Item 2</button>\\r\\n                </mat-menu>\\r\\n            </mat-card-content>    \\r\\n       </mat-card>\\r\\n       <mat-card>\\r\\n            <mat-card-content>\\r\\n                <mat-card-title>On icon menu</mat-card-title>\\r\\n                <mat-card-subtitle><code>&lt;mat-menu&gt;</code> is a floating panel containing list of options.</mat-card-subtitle>\\r\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"menu2\\\"><mat-icon>menu</mat-icon></button>\\r\\n                <mat-menu #menu2=\\\"matMenu\\\">\\r\\n                  <button mat-menu-item>Item 1</button>\\r\\n                  <button mat-menu-item>Item 2</button>\\r\\n                </mat-menu>\\r\\n            </mat-card-content>    \\r\\n       </mat-card>\\r\\n       <mat-card>\\r\\n            <mat-card-content>\\r\\n                <mat-card-title>Nested menu</mat-card-title>\\r\\n                <mat-card-subtitle><code>&lt;mat-menu&gt;</code> is a floating panel containing list of options.</mat-card-subtitle>\\r\\n                <button mat-raised-button color=\\\"accent\\\" [matMenuTriggerFor]=\\\"animals\\\">Animal index</button>\\r\\n\\r\\n                <mat-menu #animals=\\\"matMenu\\\">\\r\\n                  <button mat-menu-item [matMenuTriggerFor]=\\\"vertebrates\\\">Vertebrates</button>\\r\\n                  <button mat-menu-item [matMenuTriggerFor]=\\\"invertebrates\\\">Invertebrates</button>\\r\\n                </mat-menu>\\r\\n\\r\\n                <mat-menu #vertebrates=\\\"matMenu\\\">\\r\\n                  <button mat-menu-item [matMenuTriggerFor]=\\\"fish\\\">Fishes</button>\\r\\n                  <button mat-menu-item [matMenuTriggerFor]=\\\"amphibians\\\">Amphibians</button>\\r\\n                  <button mat-menu-item [matMenuTriggerFor]=\\\"reptiles\\\">Reptiles</button>\\r\\n                  <button mat-menu-item>Birds</button>\\r\\n                  <button mat-menu-item>Mammals</button>\\r\\n                </mat-menu>\\r\\n\\r\\n                <mat-menu #invertebrates=\\\"matMenu\\\">\\r\\n                  <button mat-menu-item>Insects</button>\\r\\n                  <button mat-menu-item>Molluscs</button>\\r\\n                  <button mat-menu-item>Crustaceans</button>\\r\\n                  <button mat-menu-item>Corals</button>\\r\\n                  <button mat-menu-item>Arachnids</button>\\r\\n                  <button mat-menu-item>Velvet worms</button>\\r\\n                  <button mat-menu-item>Horseshoe crabs</button>\\r\\n                </mat-menu>\\r\\n\\r\\n                <mat-menu #fish=\\\"matMenu\\\">\\r\\n                  <button mat-menu-item>Baikal oilfish</button>\\r\\n                  <button mat-menu-item>Bala shark</button>\\r\\n                  <button mat-menu-item>Ballan wrasse</button>\\r\\n                  <button mat-menu-item>Bamboo shark</button>\\r\\n                  <button mat-menu-item>Banded killifish</button>\\r\\n                </mat-menu>\\r\\n\\r\\n                <mat-menu #amphibians=\\\"matMenu\\\">\\r\\n                  <button mat-menu-item>Sonoran desert toad</button>\\r\\n                  <button mat-menu-item>Western toad</button>\\r\\n                  <button mat-menu-item>Arroyo toad</button>\\r\\n                  <button mat-menu-item>Yosemite toad</button>\\r\\n                </mat-menu>\\r\\n\\r\\n                <mat-menu #reptiles=\\\"matMenu\\\">\\r\\n                  <button mat-menu-item>Banded Day Gecko</button>\\r\\n                  <button mat-menu-item>Banded Gila Monster</button>\\r\\n                  <button mat-menu-item>Black Tree Monitor</button>\\r\\n                  <button mat-menu-item>Blue Spiny Lizard</button>\\r\\n                  <button mat-menu-item disabled>Velociraptor</button>\\r\\n                </mat-menu>\\r\\n            </mat-card-content>    \\r\\n       </mat-card>\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n                <mat-card-title>With icon menu</mat-card-title>\\r\\n                <mat-card-subtitle><code>&lt;mat-menu&gt;</code> is a floating panel containing list of options.</mat-card-subtitle>\\r\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"menu4\\\">\\r\\n                  <mat-icon>more_vert</mat-icon>\\r\\n                </button>\\r\\n                <mat-menu #menu4=\\\"matMenu\\\">\\r\\n                  <button mat-menu-item>\\r\\n                    <mat-icon>dialpad</mat-icon>\\r\\n                    <span>Redial</span>\\r\\n                  </button>\\r\\n                  <button mat-menu-item disabled>\\r\\n                    <mat-icon>voicemail</mat-icon>\\r\\n                    <span>Check voicemail</span>\\r\\n                  </button>\\r\\n                  <button mat-menu-item>\\r\\n                    <mat-icon>notifications_off</mat-icon>\\r\\n                    <span>Disable alerts</span>\\r\\n                  </button>\\r\\n                </mat-menu>\\r\\n            </mat-card-content>    \\r\\n       </mat-card>\\r\\n    </div>    \\r\\n</div>    \"","module.exports = \"\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss']\r\n})\r\nexport class MenuComponent {\r\n  \r\n}\r\n","module.exports = \"<!-- ============================================================== -->\\r\\n<!-- Fixed height Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row\\\">\\r\\n    <div fxFlex.gt-sm=\\\"100%\\\" >\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n              <mat-card-title>Basic Progress spinner</mat-card-title>\\r\\n              <mat-card-subtitle><code>&lt;mat-progress-spinner&gt;</code> are a circular indicators of progress and activity.</mat-card-subtitle>\\r\\n              <mat-spinner></mat-spinner>  \\r\\n            </mat-card-content>        \\r\\n        </mat-card>\\r\\n    </div> \\r\\n</div>    \\r\\n<!-- ============================================================== -->\\r\\n<!-- Basic Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n<mat-card>\\r\\n    <mat-card-content>\\r\\n      <mat-card-title>Configurable progress spinner</mat-card-title>\\r\\n      \\r\\n      <section class=\\\"example-section\\\">\\r\\n      <label class=\\\"example-margin\\\">Color:</label>\\r\\n      <mat-radio-group [(ngModel)]=\\\"color\\\">\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"primary\\\">\\r\\n          Primary\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"accent\\\">\\r\\n          Accent\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"warn\\\">\\r\\n          Warn\\r\\n        </mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n    </section>\\r\\n        <br/>\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <label class=\\\"example-margin\\\">Mode:</label>\\r\\n      <mat-radio-group [(ngModel)]=\\\"mode\\\">\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"determinate\\\">\\r\\n          Determinate\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"indeterminate\\\">\\r\\n          Indeterminate\\r\\n        </mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n    </section>\\r\\n<br/>\\r\\n    <section class=\\\"example-section\\\" *ngIf=\\\"mode == 'determinate'\\\">\\r\\n      <label class=\\\"example-margin\\\">Progress:</label>\\r\\n      <mat-slider class=\\\"example-margin\\\" [(ngModel)]=\\\"value\\\"></mat-slider>\\r\\n    </section>\\r\\n    <h4 class=\\\"example-h2\\\">Result</h4>\\r\\n\\r\\n    <mat-progress-spinner\\r\\n        class=\\\"example-margin\\\"\\r\\n        [color]=\\\"color\\\"\\r\\n        [mode]=\\\"mode\\\"\\r\\n        [value]=\\\"value\\\">\\r\\n    </mat-progress-spinner>    \\r\\n    </mat-card-content>        \\r\\n</mat-card>\\r\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-snipper',\r\n  templateUrl: './progress-snipper.component.html',\r\n  styleUrls: ['./progress-snipper.component.scss']\r\n})\r\nexport class ProgressSnipperComponent {\r\n    color = 'warn';\r\n    mode = 'determinate';\r\n    value = 50;\r\n  \r\n\r\n  \r\n}\r\n","module.exports = \"<!-- ============================================================== -->\\r\\n<!-- Fixed height Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row\\\">\\r\\n    <div fxFlex.gt-sm=\\\"100%\\\" >\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n              <mat-card-title>Determinate progress-bar</mat-card-title>\\r\\n              <mat-card-subtitle><code>&lt;mat-progress-bar mode=\\\"determinate\\\"&gt;</code> is a horizontal progress-bar for indicating progress and activity.</mat-card-subtitle>\\r\\n              <mat-progress-bar mode=\\\"determinate\\\" value=\\\"40\\\"></mat-progress-bar>  \\r\\n            </mat-card-content>        \\r\\n        </mat-card>\\r\\n    </div> \\r\\n</div>\\r\\n<!-- ============================================================== -->\\r\\n<!-- Fixed height Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row\\\">\\r\\n    <div fxFlex.gt-sm=\\\"100%\\\" >\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n              <mat-card-title>Indeterminate progress-bar</mat-card-title>\\r\\n              <mat-card-subtitle><code>&lt;mat-progress-bar mode=\\\"indeterminate\\\"&gt;</code> is a horizontal progress-bar for indicating progress and activity.</mat-card-subtitle>\\r\\n              <mat-progress-bar mode=\\\"indeterminate\\\" value=\\\"40\\\"></mat-progress-bar>  \\r\\n            </mat-card-content>        \\r\\n        </mat-card>\\r\\n    </div> \\r\\n</div>\\r\\n<!-- ============================================================== -->\\r\\n<!-- Fixed height Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row\\\">\\r\\n    <div fxFlex.gt-sm=\\\"100%\\\" >\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n              <mat-card-title>Buffer progress-bar</mat-card-title>\\r\\n              <mat-card-subtitle><code>&lt;mat-progress-bar mode=\\\"buffer\\\"&gt;</code> is a horizontal progress-bar for indicating progress and activity.</mat-card-subtitle>\\r\\n              <mat-progress-bar mode=\\\"buffer\\\"></mat-progress-bar>  \\r\\n            </mat-card-content>        \\r\\n        </mat-card>\\r\\n    </div> \\r\\n</div>\\r\\n<!-- ============================================================== -->\\r\\n<!-- Fixed height Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row\\\">\\r\\n    <div fxFlex.gt-sm=\\\"100%\\\" >\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n              <mat-card-title>Query  progress-bar</mat-card-title>\\r\\n              <mat-card-subtitle><code>&lt;mat-progress-bar mode=\\\"query\\\"&gt;</code> is a horizontal progress-bar for indicating progress and activity.</mat-card-subtitle>\\r\\n              <mat-progress-bar mode=\\\"query\\\"></mat-progress-bar>  \\r\\n            </mat-card-content>        \\r\\n        </mat-card>\\r\\n    </div> \\r\\n</div>\\r\\n<!-- ============================================================== -->\\r\\n<!-- Fixed height Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row\\\">\\r\\n    <div fxFlex.gt-sm=\\\"100%\\\" >\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n              <mat-card-title>Colored  progress-bar</mat-card-title>\\r\\n              <mat-card-subtitle><code>&lt;mat-progress-bar mode=\\\"determinate\\\"&gt;</code> is a horizontal progress-bar for indicating progress and activity.</mat-card-subtitle>\\r\\n              <mat-progress-bar mode=\\\"determinate\\\" value=\\\"40\\\" color=\\\"primary\\\"></mat-progress-bar><br/>  \\r\\n              <mat-progress-bar mode=\\\"determinate\\\" value=\\\"80\\\" color=\\\"accent\\\"></mat-progress-bar><br/>  \\r\\n              <mat-progress-bar mode=\\\"determinate\\\" value=\\\"20\\\" color=\\\"warn\\\"></mat-progress-bar>      \\r\\n            </mat-card-content>        \\r\\n        </mat-card>\\r\\n    </div> \\r\\n</div>\\r\\n<!-- ============================================================== -->\\r\\n<!-- Fixed height Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row\\\">\\r\\n    <div fxFlex.gt-sm=\\\"100%\\\" >\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n              <mat-card-title>Configurable   progress-bar</mat-card-title>\\r\\n              <mat-card-subtitle><code>&lt;mat-progress-bar mode=\\\"query\\\"&gt;</code> is a horizontal progress-bar for indicating progress and activity.</mat-card-subtitle>\\r\\n              <section class=\\\"example-section\\\">\\r\\n                  <label class=\\\"example-margin\\\">Color:</label>\\r\\n                  <mat-radio-group [(ngModel)]=\\\"color\\\">\\r\\n                    <mat-radio-button class=\\\"example-margin\\\" value=\\\"primary\\\">\\r\\n                      Primary\\r\\n                    </mat-radio-button>\\r\\n                    <mat-radio-button class=\\\"example-margin\\\" value=\\\"accent\\\">\\r\\n                      Accent\\r\\n                    </mat-radio-button>\\r\\n                    <mat-radio-button class=\\\"example-margin\\\" value=\\\"warn\\\">\\r\\n                      Warn\\r\\n                    </mat-radio-button>\\r\\n                  </mat-radio-group>\\r\\n                </section>\\r\\n                <br/>\\r\\n                <section class=\\\"example-section\\\">\\r\\n                  <label class=\\\"example-margin\\\">Mode:</label>\\r\\n                  <mat-radio-group [(ngModel)]=\\\"mode\\\">\\r\\n                    <mat-radio-button class=\\\"example-margin\\\" value=\\\"determinate\\\">\\r\\n                      Determinate\\r\\n                    </mat-radio-button>\\r\\n                    <mat-radio-button class=\\\"example-margin\\\" value=\\\"indeterminate\\\">\\r\\n                      Indeterminate\\r\\n                    </mat-radio-button>\\r\\n                    <mat-radio-button class=\\\"example-margin\\\" value=\\\"buffer\\\">\\r\\n                      Buffer\\r\\n                    </mat-radio-button>\\r\\n                    <mat-radio-button class=\\\"example-margin\\\" value=\\\"query\\\">\\r\\n                      Query\\r\\n                    </mat-radio-button>\\r\\n                  </mat-radio-group>\\r\\n                </section>\\r\\n                \\r\\n                <section class=\\\"example-section\\\" *ngIf=\\\"mode == 'determinate' || mode == 'buffer'\\\">\\r\\n                  <label class=\\\"example-margin\\\">Progress:</label>\\r\\n                  <mat-slider class=\\\"example-margin\\\" [(ngModel)]=\\\"value\\\"></mat-slider>\\r\\n                </section>\\r\\n                <section class=\\\"example-section\\\" *ngIf=\\\"mode == 'buffer'\\\">\\r\\n                  <label class=\\\"example-margin\\\">Buffer:</label>\\r\\n                  <mat-slider class=\\\"example-margin\\\" [(ngModel)]=\\\"bufferValue\\\"></mat-slider>\\r\\n                </section>\\r\\n                <h2 class=\\\"example-h2\\\">Result</h2>\\r\\n\\r\\n                <section class=\\\"example-section\\\">\\r\\n                  <mat-progress-bar\\r\\n                      class=\\\"example-margin\\\"\\r\\n                      [color]=\\\"color\\\"\\r\\n                      [mode]=\\\"mode\\\"\\r\\n                      [value]=\\\"value\\\"\\r\\n                      [bufferValue]=\\\"bufferValue\\\">\\r\\n                  </mat-progress-bar>\\r\\n                </section>\\r\\n            </mat-card-content>        \\r\\n        </mat-card>\\r\\n    </div> \\r\\n</div>\"","module.exports = \".example-h2 {\\n  margin: 10px; }\\n\\n.example-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px; }\\n\\n.example-margin {\\n  margin: 0 10px; }\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-progress',\r\n  templateUrl: './progress.component.html',\r\n  styleUrls: ['./progress.component.scss']\r\n})\r\nexport class ProgressComponent {\r\n  color = 'primary';\r\n  mode = 'determinate';\r\n  value = 50;\r\n  bufferValue = 75;\r\n\r\n}\r\n","module.exports = \"<!-- ============================================================== -->\\r\\n<!-- Fixed height Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row\\\">\\r\\n    <div fxFlex.gt-sm=\\\"100%\\\" >\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n              <mat-card-title>Basic slide-toggles</mat-card-title>\\r\\n              <mat-card-subtitle><code>&lt;mat-slide-toggle&gt;</code> is an on/off control that can be toggled via clicking or dragging.</mat-card-subtitle>\\r\\n              <mat-slide-toggle>Slide me!</mat-slide-toggle>\\r\\n            </mat-card-content>        \\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>    \\r\\n<!-- ============================================================== -->\\r\\n<!-- Basic Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n<mat-card>\\r\\n    <mat-card-content>\\r\\n      <mat-card-title>Basic grid-list</mat-card-title>\\r\\n      <mat-card-subtitle><code>&lt;mat-slide-toggle&gt;</code> is an on/off control that can be toggled via clicking or dragging.</mat-card-subtitle>\\r\\n      <section class=\\\"example-section\\\">\\r\\n      <label class=\\\"example-margin\\\">Color:</label>\\r\\n      <mat-radio-group [(ngModel)]=\\\"color\\\">\\r\\n        <mat-radio-button class=\\\"example-margin\\\" color=\\\"primary\\\" value=\\\"primary\\\">\\r\\n          Primary\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button class=\\\"example-margin\\\" color=\\\"accent\\\" value=\\\"accent\\\">\\r\\n          Accent\\r\\n        </mat-radio-button>\\r\\n        <mat-radio-button class=\\\"example-margin\\\" color=\\\"warn\\\" value=\\\"warn\\\">\\r\\n          Warn\\r\\n        </mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"checked\\\">Checked</mat-checkbox>\\r\\n    </section>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"disabled\\\">Disabled</mat-checkbox>\\r\\n    </section>\\r\\n    <h2 class=\\\"example-h2\\\">Result</h2>\\r\\n\\r\\n    <section class=\\\"example-section\\\">\\r\\n      <mat-slide-toggle\\r\\n          class=\\\"example-margin\\\"\\r\\n          [color]=\\\"color\\\"\\r\\n          [checked]=\\\"checked\\\"\\r\\n          [disabled]=\\\"disabled\\\">\\r\\n        Slide me!\\r\\n      </mat-slide-toggle>\\r\\n    </section>  \\r\\n    </mat-card-content>        \\r\\n</mat-card>\\r\\n\"","module.exports = \".example-h2 {\\n  margin: 10px; }\\n\\n.example-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px; }\\n\\n.example-margin {\\n  margin: 10px; }\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-slide-toggle',\r\n  templateUrl: './slide-toggle.component.html',\r\n  styleUrls: ['./slide-toggle.component.scss']\r\n})\r\nexport class SlideToggleComponent {\r\n\r\n  color = 'accent';\r\n  checked = false;\r\n  disabled = false;\r\n\r\n  \r\n}\r\n","module.exports = \"<mat-card>\\r\\n  <mat-card-content>    \\r\\n  <mat-card-title>Slider</mat-card-title>\\r\\n  <mat-card-subtitle>mat-slider allows for the selection of a value from a range via mouse, touch, or keyboard, similar to <code class=\\\"\\\"><a href=\\\"https://material.angular.io/components/slider/overview\\\">Official Component</a></code></mat-card-subtitle>\\r\\n    \\r\\n    <h4 class=\\\"m-b-0\\\">Basic Slider</h4>\\r\\n    <mat-slider color=\\\"warn\\\" value=\\\"40\\\"></mat-slider>\\r\\n      \\r\\n    <h4  class=\\\"m-b-0\\\">value Slider</h4>\\r\\n    Label <mat-slider #slidey color=\\\"primary\\\"  value=\\\"40\\\"></mat-slider>\\r\\n    {{slidey.value}}\\r\\n\\r\\n    <h4 class=\\\"m-b-0\\\">With Min and Max</h4>\\r\\n    <mat-form-field><input [(ngModel)]=\\\"min\\\" matInput > </mat-form-field> <mat-form-field> <input [(ngModel)]=\\\"max\\\" matInput></mat-form-field><br/>\\r\\n    <mat-slider [min]=\\\"min\\\" [max]=\\\"max\\\" tickInterval=\\\"5\\\" #slider2 color=\\\"warn\\\"></mat-slider>\\r\\n    {{slider2.value}}\\r\\n    \\r\\n\\r\\n    <h4 class=\\\"m-b-0\\\">Disabled Slider</h4>\\r\\n    <mat-slider disabled #slider3></mat-slider>\\r\\n    {{slider3.value}}\\r\\n\\r\\n      <h4 class=\\\"m-b-0\\\">Vertical slider</h4>\\r\\n    <mat-slider vertical  value=\\\"50\\\"></mat-slider>\\r\\n      \\r\\n    <h4 class=\\\"m-b-0\\\">Selecting a value</h4>\\r\\n    <mat-slider min=\\\"1\\\" max=\\\"100\\\" step=\\\"20\\\" #slider5></mat-slider>\\r\\n    {{slider5.value}}\\r\\n\\r\\n      <h4 class=\\\"m-b-0\\\">Slider with set tick interval</h4>\\r\\n    <mat-slider tickInterval=\\\"auto\\\"></mat-slider>\\r\\n    <mat-slider tickInterval=\\\"9\\\"></mat-slider>\\r\\n\\r\\n      <h4 class=\\\"m-b-0\\\">Slider with Thumb Label</h4>\\r\\n    <mat-slider thumbLabel></mat-slider>\\r\\n\\r\\n      <h4 class=\\\"m-b-0\\\">Slider with one-way binding</h4>\\r\\n    <mat-slider [value]=\\\"val\\\" step=\\\"40\\\"></mat-slider>\\r\\n      <mat-form-field><input [(ngModel)]=\\\"val\\\" matInput></mat-form-field>\\r\\n\\r\\n      <h4 class=\\\"m-b-0\\\">Slider with two-way binding</h4>\\r\\n    <mat-slider [(ngModel)]=\\\"demo\\\" step=\\\"40\\\"></mat-slider>\\r\\n      <mat-form-field><input [(ngModel)]=\\\"demo\\\" matInput></mat-form-field>\\r\\n\\r\\n      <h4 class=\\\"m-b-0\\\">Inverted slider</h4>\\r\\n    <mat-slider invert value=\\\"50\\\" tickInterval=\\\"5\\\"></mat-slider>\\r\\n\\r\\n    \\r\\n\\r\\n      <h4 class=\\\"m-b-0\\\">Inverted vertical slider</h4>\\r\\n    <mat-slider vertical invert thumbLabel tickInterval=\\\"auto\\\" value=\\\"50\\\"></mat-slider>\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-slider',\r\n  templateUrl: './slider.component.html',\r\n  styleUrls: ['./slider.component.scss']\r\n})\r\nexport class SliderComponent {\r\n\r\n  demo: number;\r\n  val = 50;\r\n  min = 0;\r\n  max = 100;\r\n\r\n  constructor() {}\r\n}\r\n","module.exports = \"<mat-card>\\r\\n    <mat-card-content>\\r\\n        <mat-card-title>Basic snack-bar</mat-card-title>\\r\\n        <mat-card-subtitle>matSnackBar is a service for displaying snack-bar notifications. <code class=\\\"\\\"><a href=\\\"https://material.angular.io/components/snack-bar/overview\\\">Official Component</a></code></mat-card-subtitle>\\r\\n        <mat-form-field>\\r\\n            <input matInput value=\\\"Disco party!\\\" placeholder=\\\"Message\\\" #message> </mat-form-field>\\r\\n        <mat-form-field>\\r\\n            <input matInput value=\\\"Dance\\\" placeholder=\\\"Action\\\" #action> </mat-form-field>\\r\\n        <button mat-raised-button color=\\\"warn\\\" (click)=\\\"openSnackBar(message.value, action.value)\\\">Show snack-bar</button>\\r\\n    </mat-card-content>\\r\\n</mat-card>\"","module.exports = \"\"","import { Component } from '@angular/core';\r\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-snackbar',\r\n  templateUrl: './snackbar.component.html',\r\n  styleUrls: ['./snackbar.component.scss']\r\n})\r\nexport class SnackbarComponent {\r\n  constructor(public snackBar: MatSnackBar) {}\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open(message, action, {\r\n      duration: 2000,\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<!-- ============================================================== -->\\r\\n<!-- row -->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n    <!-- Card column -->\\r\\n    <div fxFlex.gt-sm=\\\"100%\\\" fxFlex=\\\"100\\\">\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n                <mat-card-title>Stepper</mat-card-title>\\r\\n                <mat-card-subtitle>Check the <code class=\\\"\\\"><a href=\\\"https://material.angular.io/components/stepper/overview\\\">Official Component</a></code></mat-card-subtitle>\\r\\n                <button mat-raised-button (click)=\\\"isLinear = true\\\" id=\\\"toggle-linear\\\">Enable linear mode</button>\\r\\n                <mat-horizontal-stepper [linear]=\\\"isLinear\\\">\\r\\n                  <mat-step [stepControl]=\\\"firstFormGroup\\\">\\r\\n                    <form [formGroup]=\\\"firstFormGroup\\\">\\r\\n                      <ng-template matStepLabel>Fill out your name</ng-template>\\r\\n                      <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\r\\n                      </mat-form-field>\\r\\n                      <div>\\r\\n                        <button mat-raised-button color=\\\"warn\\\" matStepperNext>Next</button>\\r\\n                      </div>\\r\\n                    </form>\\r\\n                  </mat-step>\\r\\n                  <mat-step [stepControl]=\\\"secondFormGroup\\\">\\r\\n                    <form [formGroup]=\\\"secondFormGroup\\\">\\r\\n                      <ng-template matStepLabel>Fill out your address</ng-template>\\r\\n                      <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\r\\n                      </mat-form-field>\\r\\n                      <div>\\r\\n                        <button mat-raised-button color=\\\"accent\\\" matStepperPrevious>Back</button>\\r\\n                        <button mat-raised-button color=\\\"warn\\\" matStepperNext>Next</button>\\r\\n                      </div>\\r\\n                    </form>\\r\\n                  </mat-step>\\r\\n                  <mat-step>\\r\\n                    <ng-template matStepLabel>Done</ng-template>\\r\\n                    You are now done.\\r\\n                    <div>\\r\\n                      <button mat-raised-button color=\\\"accent\\\" matStepperPrevious>Back</button>\\r\\n                    </div>\\r\\n                  </mat-step>\\r\\n                </mat-horizontal-stepper>\\r\\n            \\r\\n            </mat-card-content>\\r\\n             \\r\\n        </mat-card>    \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-stepper',\r\n  templateUrl: './stepper.component.html',\r\n  styleUrls: ['./stepper.component.scss']\r\n})\r\nexport class StepperComponent {\r\n  isLinear = false;\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n\r\n  constructor(private _formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.firstFormGroup = this._formBuilder.group({\r\n      firstCtrl: ['', Validators.required]\r\n    });\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      secondCtrl: ['', Validators.required]\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<!-- ============================================================== -->\\r\\n<!-- row -->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n    <!-- Card column -->\\r\\n    <div fxFlex.gt-sm=\\\"100%\\\" fxFlex=\\\"100\\\">\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n                <mat-card-title>Basic Tab </mat-card-title>\\r\\n                <mat-card-subtitle>Check the <code class=\\\"\\\"><a href=\\\"https://material.angular.io/components/tabs/overview\\\">Official Component</a></code></mat-card-subtitle>\\r\\n            </mat-card-content>\\r\\n            <mat-tab-group>\\r\\n                <mat-tab label=\\\"Tab 1\\\"><mat-card-content>Content 1</mat-card-content></mat-tab>\\r\\n                <mat-tab label=\\\"Tab 2\\\"><mat-card-content>Content 2</mat-card-content></mat-tab>\\r\\n            </mat-tab-group>\\r\\n        </mat-card>    \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- ============================================================== -->\\r\\n<!-- row -->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\r\\n    <!-- Card column -->\\r\\n    <div fxFlex.gt-sm=\\\"100%\\\" fxFlex=\\\"100\\\">\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n                <mat-card-title>Complex Tab Example (Responsive tab)</mat-card-title>\\r\\n            </mat-card-content>\\r\\n            <mat-tab-group class=\\\"demo-tab-group\\\">\\r\\n              <mat-tab label=\\\"Tab 1\\\">\\r\\n                <div class=\\\"demo-tab-content\\\">\\r\\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\\r\\n                  Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\\r\\n                  In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\\r\\n                  feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\\r\\n                  orci enim rutrum enim, vel tempor sapien arcu a tellus.\\r\\n                </div>\\r\\n              </mat-tab>\\r\\n              <mat-tab label=\\\"Tab 2\\\">\\r\\n                <ng-template mat-tab-label>\\r\\n                  ⭐\\r\\n                </ng-template>\\r\\n                <div class=\\\"demo-tab-content\\\">\\r\\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\\r\\n                  Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\\r\\n                  In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\\r\\n                  feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\\r\\n                  orci enim rutrum enim, vel tempor sapien arcu a tellus.\\r\\n                </div>  \\r\\n              </mat-tab>\\r\\n              <mat-tab label=\\\"Tab 3\\\" disabled>\\r\\n                No content  \\r\\n              </mat-tab>\\r\\n              <mat-tab label=\\\"Tab 4\\\">\\r\\n               <div class=\\\"demo-tab-content\\\">\\r\\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\\r\\n                  Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\\r\\n                  In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\\r\\n                  feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\\r\\n                  orci enim rutrum enim, vel tempor sapien arcu a tellus.\\r\\n                  <br />\\r\\n                  <br />\\r\\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla venenatis ante augue.\\r\\n                  Phasellus volutpat neque ac dui mattis vulputate. Etiam consequat aliquam cursus.\\r\\n                  In sodales pretium ultrices. Maecenas lectus est, sollicitudin consectetur felis nec,\\r\\n                  feugiat ultricies mi. Aliquam erat volutpat. Nam placerat, tortor in ultrices porttitor,\\r\\n                  orci enim rutrum enim, vel tempor sapien arcu a tellus.\\r\\n                </div>  \\r\\n              </mat-tab>\\r\\n              <mat-tab label=\\\"Tab 5\\\">\\r\\n                No content  \\r\\n              </mat-tab>\\r\\n              <mat-tab label=\\\"Tab 6\\\">\\r\\n                No content  \\r\\n              </mat-tab>\\r\\n            </mat-tab-group>\\r\\n        </mat-card>    \\r\\n    </div>\\r\\n</div>\"","module.exports = \".demo-tab-group {\\n  border: 1px solid #e8e8e8; }\\n\\n.demo-tab-content {\\n  padding: 24px; }\\n\"","import {Component} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-tabs',\r\n  templateUrl: './tabs.component.html',\r\n  styleUrls: ['./tabs.component.scss']\r\n})\r\nexport class TabsComponent {\r\n\r\n}\r\n","module.exports = \"<mat-card class=\\\"no-shadow\\\">\\r\\n  <mat-card-content>\\r\\n  <mat-card-title>Toolbar</mat-card-title>\\r\\n  <mat-card-subtitle>matToolbar is a container for headers, titles, or actions.<code class=\\\"\\\"><a href=\\\"https://material.angular.io/components/toolbar/overview\\\">Official Component</a></code></mat-card-subtitle>\\r\\n  \\r\\n    <p>Basic toolbar:</p>\\r\\n    <mat-toolbar>My App</mat-toolbar>\\r\\n    <p>The primary color toolbar:</p>\\r\\n    <mat-toolbar color=\\\"primary\\\">\\r\\n      <span>Primary Toolbar</span>\\r\\n      <span fxFlex></span>\\r\\n      <button mat-button href=\\\"#\\\" mat-icon-button>\\r\\n        <mat-icon>search</mat-icon>\\r\\n      </button>\\r\\n      <button mat-button href=\\\"#\\\" mat-icon-button>\\r\\n        <mat-icon>more_vert</mat-icon>\\r\\n      </button>\\r\\n    </mat-toolbar>\\r\\n    <p>Multiple row</p>\\r\\n    <mat-toolbar>  \\r\\n      <mat-toolbar-row>\\r\\n        <span>First Row</span>\\r\\n      </mat-toolbar-row>\\r\\n\\r\\n      <mat-toolbar-row>\\r\\n        <span>Second Row</span>\\r\\n      </mat-toolbar-row>\\r\\n    </mat-toolbar>\\r\\n    <p>Positining toolbar</p>\\r\\n    <mat-toolbar color=\\\"primary\\\">\\r\\n  <span>Application Title</span>\\r\\n\\r\\n  <!-- This fills the remaining space of the current row -->\\r\\n  <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n\\r\\n  <span>Right Aligned Text</span>\\r\\n</mat-toolbar>  \\r\\n    <p>An accent toolbar using the second toolbar row:</p>\\r\\n    <mat-toolbar color=\\\"accent\\\">\\r\\n      <mat-toolbar-row>\\r\\n        <span>Second Line Toolbar</span>\\r\\n      </mat-toolbar-row>\\r\\n    </mat-toolbar>\\r\\n    <p>A primary toolbar using the third toolbar row:</p>\\r\\n    <mat-toolbar class=\\\"bg-success\\\" color=\\\"warn\\\">\\r\\n  <mat-toolbar-row>\\r\\n    <span>Custom Toolbar</span>\\r\\n  </mat-toolbar-row>\\r\\n\\r\\n  <mat-toolbar-row>\\r\\n    <span>Second Line</span>\\r\\n    <span class=\\\"example-spacer\\\"></span>\\r\\n    <mat-icon class=\\\"example-icon\\\">verified_user</mat-icon>\\r\\n  </mat-toolbar-row>\\r\\n\\r\\n  <mat-toolbar-row>\\r\\n    <span>Third Line</span>\\r\\n    <span class=\\\"example-spacer\\\"></span>\\r\\n    <mat-icon class=\\\"example-icon\\\">favorite</mat-icon>\\r\\n    <mat-icon class=\\\"example-icon\\\">delete</mat-icon>\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","module.exports = \".no-shadow mat-toolbar {\\n  box-shadow: none; }\\n\\n.example-fill-remaining-space {\\n  flex: 1 1 auto; }\\n\\n.example-icon {\\n  padding: 0 14px; }\\n\\n.example-spacer {\\n  flex: 1 1 auto; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.scss']\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<!-- ============================================================== -->\\r\\n<!-- Fixed height Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row\\\">\\r\\n    <div fxFlex.gt-sm=\\\"100%\\\" >\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n              <mat-card-title>Basic Tooltip</mat-card-title>\\r\\n              <mat-card-subtitle>The Angular Material tooltip provides a text label that is displayed when the user hovers over or longpresses an element. add <code>matTooltip=\\\"yourtext\\\"</code> to any element </mat-card-subtitle>\\r\\n                <span matTooltip=\\\"Tooltip!\\\">I have a tooltip</span>\\r\\n            </mat-card-content>        \\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>  \\r\\n<!-- ============================================================== -->\\r\\n<!-- Fixed height Card Grid-->\\r\\n<!-- ============================================================== -->\\r\\n<div fxLayout=\\\"row\\\">\\r\\n    <div fxFlex.gt-sm=\\\"100%\\\" >\\r\\n        <mat-card>\\r\\n            <mat-card-content>\\r\\n              <mat-card-title>Positioning Tooltip</mat-card-title>\\r\\n              <mat-card-subtitle>Add <code>matTooltipPosition=\\\"below, above, left, right, before, after\\\"</code> to any element</mat-card-subtitle>\\r\\n                <button mat-raised-button color=\\\"accent\\\" matTooltip=\\\"Tooltip!\\\" matTooltipPosition=\\\"above\\\">Above tooltip</button>\\r\\n                <button mat-raised-button color=\\\"warn\\\" matTooltip=\\\"Tooltip!\\\" matTooltipPosition=\\\"below\\\">below tooltip</button>\\r\\n                <button mat-raised-button color=\\\"primary\\\" matTooltip=\\\"Tooltip!\\\" matTooltipPosition=\\\"left\\\">left tooltip</button>\\r\\n                <button mat-raised-button color=\\\"warn\\\" matTooltip=\\\"Tooltip!\\\" matTooltipPosition=\\\"right\\\">right tooltip</button>\\r\\n                <button mat-raised-button color=\\\"accent\\\" matTooltip=\\\"Tooltip!\\\" matTooltipPosition=\\\"before\\\">Before tooltip</button>\\r\\n            </mat-card-content>        \\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\\r\\n<mat-card>\\r\\n  <mat-card-content>    \\r\\n  <mat-card-title>Tooltip with custom position</mat-card-title>\\r\\n  <mat-card-subtitle>The Angular Material tooltip provides a text label that is displayed when the user hovers over or longpresses an element.</mat-card-subtitle>\\r\\n  \\r\\n    <div class=\\\"example-tooltip-host\\\" matTooltip=\\\"Tooltip!\\\" [matTooltipPosition]=\\\"position\\\">\\r\\n      <span>Show tooltip</span>\\r\\n      <mat-form-field>\\r\\n        <mat-select class=\\\"example-select\\\" [(ngModel)]=\\\"position\\\">\\r\\n          <mat-option value=\\\"before\\\">Before</mat-option>\\r\\n          <mat-option value=\\\"after\\\">After</mat-option>\\r\\n          <mat-option value=\\\"above\\\">Above</mat-option>\\r\\n          <mat-option value=\\\"below\\\">Below</mat-option>\\r\\n          <mat-option value=\\\"left\\\">Left</mat-option>\\r\\n          <mat-option value=\\\"right\\\">Right</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","module.exports = \".example-tooltip-host {\\n  display: inline-flex;\\n  align-items: center;\\n  margin: 50px; }\\n\\n.example-select {\\n  margin: 0 10px; }\\n\"","import { Component } from '@angular/core';\r\nimport { TooltipPosition } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-tooltip',\r\n  templateUrl: './tooltip.component.html',\r\n  styleUrls: ['./tooltip.component.scss']\r\n})\r\nexport class TooltipComponent {\r\n  position = 'before';\r\n}\r\n","module.exports = \"<mat-card>\\r\\n  <mat-card-content>    \\r\\n  <mat-card-title>Users</mat-card-title>\\r\\n{{isTest()}}\\r\\n      <!--<mat-card-subtitle>Angular Material buttons are native <code> button or a </code> elements enhanced with Material Design styling and ink ripples. <code><a href=\\\"https://material.angular.io/components/button/overview\\\" target=\\\"_blank\\\">Official Doc</a></code></mat-card-subtitle>-->\\r\\n  <!---->\\r\\n      <!--<h4>Basic Buttons <br/><code class=\\\"bg-light\\\">&lt;button mat-button color=\\\"primary\\\"&gt;Primary&lt;/button&gt;</code></h4>-->\\r\\n    <!--<div class=\\\"button-row\\\">-->\\r\\n      <!--<button mat-button>Basic</button>-->\\r\\n      <!--<button mat-button color=\\\"primary\\\">Primary</button>-->\\r\\n      <!--<button mat-button color=\\\"accent\\\">Accent</button>-->\\r\\n      <!--<button mat-button color=\\\"warn\\\">Warn</button>-->\\r\\n      <!--<button mat-button disabled>Disabled</button>-->\\r\\n      <!--<a mat-button routerLink=\\\".\\\">Link</a>-->\\r\\n    <!--</div>-->\\r\\n\\r\\n    <!--<h4>Raised Buttons <br/><code class=\\\"bg-light\\\">&lt;button mat-raised-button color=\\\"primary\\\"&gt;Primary&lt;/button&gt;</code></h4>-->\\r\\n    <!--<div class=\\\"button-row\\\">-->\\r\\n      <!--<button mat-raised-button>Basic</button>-->\\r\\n      <!--<button mat-raised-button color=\\\"primary\\\">Primary</button>-->\\r\\n      <!--<button mat-raised-button color=\\\"accent\\\">Accent</button>-->\\r\\n      <!--<button mat-raised-button color=\\\"warn\\\">Warn</button>-->\\r\\n      <!--<button mat-raised-button disabled>Disabled</button>-->\\r\\n      <!--<a mat-raised-button routerLink=\\\".\\\">Link</a>-->\\r\\n    <!--</div>-->\\r\\n\\r\\n    <!--<h4>Icon Buttons <br/><code class=\\\"bg-light\\\">&lt;button mat-icon-button color=\\\"primary\\\"&gt; <br/>&nbsp;&nbsp;&nbsp;&nbsp;&lt;mat-icon aria-label=\\\"Example icon-button with a heart icon\\\"&gt;favorite&lt;/mat-icon&gt;<br/>&lt;/button&gt;</code></h4>-->\\r\\n    <!--<div class=\\\"button-row\\\">-->\\r\\n      <!--<button mat-icon-button>-->\\r\\n        <!--<mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>-->\\r\\n      <!--</button>-->\\r\\n      <!--<button mat-icon-button color=\\\"primary\\\">-->\\r\\n        <!--<mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>-->\\r\\n      <!--</button>-->\\r\\n      <!--<button mat-icon-button color=\\\"accent\\\">-->\\r\\n        <!--<mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>-->\\r\\n      <!--</button>-->\\r\\n      <!--<button mat-icon-button color=\\\"warn\\\">-->\\r\\n        <!--<mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>-->\\r\\n      <!--</button>-->\\r\\n      <!--<button mat-icon-button disabled>-->\\r\\n        <!--<mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>-->\\r\\n      <!--</button>-->\\r\\n    <!--</div>-->\\r\\n\\r\\n    <!--<h4>Fab Buttons <br/><code class=\\\"bg-light\\\">&lt;button mat-fab color=\\\"primary\\\"&gt;Primary&lt;/button&gt;</code></h4>-->\\r\\n    <!--<div class=\\\"button-row\\\">-->\\r\\n      <!--<button mat-fab>Basic</button>-->\\r\\n      <!--<button mat-fab color=\\\"primary\\\">Primary</button>-->\\r\\n      <!--<button mat-fab color=\\\"accent\\\">Accent</button>-->\\r\\n      <!--<button mat-fab color=\\\"warn\\\">Warn</button>-->\\r\\n      <!--<button mat-fab disabled>Disabled</button>-->\\r\\n      <!--<button mat-fab>-->\\r\\n        <!--<mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>-->\\r\\n      <!--</button>-->\\r\\n      <!--<a mat-fab routerLink=\\\".\\\">Link</a>-->\\r\\n    <!--</div>-->\\r\\n\\r\\n    <!--<h4>Mini Fab Buttons <br/><code class=\\\"bg-light\\\">&lt;button mat-mini-fab color=\\\"primary\\\"&gt;Primary&lt;/button&gt;</code></h4>-->\\r\\n    <!--<div class=\\\"button-row\\\">-->\\r\\n      <!--<button mat-mini-fab>Base</button>-->\\r\\n      <!--<button mat-mini-fab color=\\\"primary\\\">Pri</button>-->\\r\\n      <!--<button mat-mini-fab color=\\\"accent\\\">Acc</button>-->\\r\\n      <!--<button mat-mini-fab color=\\\"warn\\\">Warn</button>-->\\r\\n      <!--<button mat-mini-fab disabled>Dis</button>-->\\r\\n      <!--<button mat-mini-fab>-->\\r\\n        <!--<mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">favorite</mat-icon>-->\\r\\n      <!--</button>-->\\r\\n      <!--<a mat-mini-fab routerLink=\\\".\\\">Link</a>-->\\r\\n    <!--</div>-->\\r\\n    <!--<h4>Button toggle </h4>  -->\\r\\n    <!--<mat-button-toggle-group #group=\\\"matButtonToggleGroup\\\">-->\\r\\n      <!--<mat-button-toggle value=\\\"left\\\">-->\\r\\n        <!--<mat-icon>format_align_left</mat-icon>-->\\r\\n      <!--</mat-button-toggle>-->\\r\\n      <!--<mat-button-toggle value=\\\"center\\\">-->\\r\\n        <!--<mat-icon>format_align_center</mat-icon>-->\\r\\n      <!--</mat-button-toggle>-->\\r\\n      <!--<mat-button-toggle value=\\\"right\\\">-->\\r\\n        <!--<mat-icon>format_align_right</mat-icon>-->\\r\\n      <!--</mat-button-toggle>-->\\r\\n      <!--<mat-button-toggle value=\\\"justify\\\" disabled>-->\\r\\n        <!--<mat-icon>format_align_justify</mat-icon>-->\\r\\n      <!--</mat-button-toggle>-->\\r\\n    <!--</mat-button-toggle-group>-->\\r\\n    <!--<div class=\\\"m-t-20\\\">Selected value: {{group.value}}</div>  -->\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","module.exports = \".example-button-row {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-around; }\\n\"","import { Component } from '@angular/core';\r\nimport { UserService } from \"../../services/user.service\";\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent {\r\n  constructor(private $service: UserService) { }\r\n\r\n  isTest() {\r\n    console.log(this.$service.getUsers());\r\n    stop();\r\n    // return this.$service.getUsers();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  public test_value: string = 'hello)))';\n\n  getUsers() {\n    return this.http.get(environment.base_url+'/testss').subscribe(res => {\n      console.log(res);\n    } );\n  }\n}\n"],"sourceRoot":""}