{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/demo-material-module.ts","webpack:///./src/app/layouts/full/full.component.html","webpack:///./src/app/layouts/full/full.component.ts","webpack:///./src/app/layouts/full/header/header.component.html","webpack:///./src/app/layouts/full/header/header.component.ts","webpack:///./src/app/layouts/full/sidebar/sidebar.component.html","webpack:///./src/app/layouts/full/sidebar/sidebar.component.ts","webpack:///./src/app/shared/accordion/accordion.directive.ts","webpack:///./src/app/shared/accordion/accordionanchor.directive.ts","webpack:///./src/app/shared/accordion/accordionlink.directive.ts","webpack:///./src/app/shared/accordion/index.ts","webpack:///./src/app/shared/menu-items/menu-items.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/spinner.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./material-component/material.module\": [\n\t\t\"./src/app/material-component/material.module.ts\",\n\t\t\"material-component-material-module\"\n\t],\n\t\"./starter/starter.module\": [\n\t\t\"./src/app/starter/starter.module.ts\",\n\t\t\"starter-starter-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"\"","module.exports = \"<!-- ============================================================== -->\\r\\n<!-- Main wrapper - style you can find in pages.scss -->\\r\\n<!-- ============================================================== -->\\r\\n<router-outlet><app-spinner></app-spinner></router-outlet>\"","import {  Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent {\r\n  \r\n}\r\n","import * as $ from 'jquery';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\r\nimport { AppRoutes } from './app.routing';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { AppHeaderComponent } from './layouts/full/header/header.component';\r\nimport { AppSidebarComponent } from './layouts/full/sidebar/sidebar.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DemoMaterialModule} from './demo-material-module';\r\n\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { SpinnerComponent } from './shared/spinner.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FullComponent,\r\n    AppHeaderComponent,\r\n    SpinnerComponent,\r\n    AppSidebarComponent  \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    DemoMaterialModule,\r\n    FormsModule,\r\n    FlexLayoutModule,  \r\n    HttpClientModule,\r\n    SharedModule,  \r\n    RouterModule.forRoot(AppRoutes)  \r\n  ],\r\n  providers: [\r\n  {\r\n    provide: LocationStrategy,\r\n    useClass: HashLocationStrategy\r\n  }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { FullComponent } from './layouts/full/full.component';\r\n\r\nexport const AppRoutes: Routes = [{\r\n  path: '',\r\n  component: FullComponent,\r\n  children: [{ \r\n    path: '', \r\n    redirectTo: '/starter', \r\n    pathMatch: 'full' \r\n  }, {\r\n    path: '',\r\n    loadChildren: './material-component/material.module#MaterialComponentsModule'\r\n  }, {\r\n    path: 'starter',\r\n    loadChildren: './starter/starter.module#StarterModule'\r\n  }]\r\n}];\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatExpansionModule,\r\n  MatFormFieldModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatStepperModule,\r\n} from '@angular/material';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {BidiModule} from '@angular/cdk/bidi';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {PlatformModule} from '@angular/cdk/platform';\r\nimport {ObserversModule} from '@angular/cdk/observers';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\n\r\n/**\r\n * NgModule that includes all Material modules that are required to serve the demo-app.\r\n */\r\n@NgModule({\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatTableModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatNativeDateModule,\r\n    CdkTableModule,\r\n    A11yModule,\r\n    BidiModule,\r\n    CdkAccordionModule,\r\n    ObserversModule,\r\n    OverlayModule,\r\n    PlatformModule,\r\n    PortalModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}\r\n","module.exports = \"<!-- ============================================================== -->\\r\\n<!-- Main wrapper - style you can find in pages.scss -->\\r\\n<!-- ============================================================== -->\\r\\n<div class=\\\"main-container\\\"> \\r\\n    <!-- ============================================================== -->\\r\\n    <!-- Topbar - style you can find in header.scss -->\\r\\n    <!-- ============================================================== -->\\r\\n    <mat-toolbar color=\\\"primary\\\" class=\\\"topbar telative\\\">\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Logo - style you can find in header.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <a class=\\\"navbar-brand\\\" href=\\\"index.html\\\">\\r\\n                <!-- Logo icon --><b>\\r\\n                    <!--You can put here icon as well // <i class=\\\"wi wi-sunset\\\"></i> //-->\\r\\n                    <!-- Dark Logo icon -->\\r\\n                    <img src=\\\"assets/images/logo-icon.png\\\" alt=\\\"homepage\\\" class=\\\"dark-logo\\\">\\r\\n                    <!-- Light Logo icon -->\\r\\n                    <img src=\\\"assets/images/logo-light-icon.png\\\" alt=\\\"homepage\\\" class=\\\"light-logo\\\">\\r\\n                </b>\\r\\n                <!--End Logo icon -->\\r\\n                <!-- Logo text -->\\r\\n                <span fxShow=\\\"false\\\" fxShow.gt-xs>\\r\\n                 <!-- dark Logo text -->\\r\\n                 <img src=\\\"assets/images/logo-text.png\\\" alt=\\\"homepage\\\" class=\\\"dark-logo\\\">\\r\\n                 <!-- Light Logo text -->    \\r\\n                 <img src=\\\"assets/images/logo-light-text.png\\\" class=\\\"light-logo\\\" alt=\\\"homepage\\\">\\r\\n                </span> </a>\\r\\n        </div>\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- sidebar toggle -->\\r\\n        <!-- ============================================================== -->\\r\\n        \\r\\n        <button mat-icon-button (click)=\\\"snav.toggle()\\\" value=\\\"sidebarclosed\\\">\\r\\n            <mat-icon>menu</mat-icon>\\r\\n        </button>\\r\\n        <span fxFlex></span>\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- app header component - style you can find in header.scss / header.component.ts-->\\r\\n        <!-- ============================================================== -->\\r\\n        <app-header></app-header>\\r\\n    </mat-toolbar>\\r\\n    <!-- ============================================================== -->\\r\\n    <!-- End Topbar - style you can find in pages.scss -->\\r\\n    <!-- ============================================================== -->\\r\\n    <mat-sidenav-container class=\\\"example-sidenav-container\\\" [style.marginTop.px]=\\\"mobileQuery.matches ? 0 : 0\\\">\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Sidebar - style you can find in sidebar.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n        <mat-sidenav #snav id=\\\"snav\\\" class=\\\"dark-sidebar pl-xs\\\" [mode]=\\\"mobileQuery.matches ? 'side' : 'over'\\\" fixedTopGap=\\\"0\\\" [opened]=\\\"mobileQuery.matches\\\" [disableClose]=\\\"mobileQuery.matches\\\"  >\\r\\n            \\r\\n                <app-sidebar></app-sidebar>\\r\\n               \\r\\n            \\r\\n        </mat-sidenav>\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Sidebar - style you can find in sidebar.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n        \\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Page container - style you can find in pages.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n        <mat-sidenav-content class=\\\"page-wrapper\\\">\\r\\n                 \\r\\n                <div class=\\\"page-content\\\">\\r\\n                   \\r\\n                        <router-outlet><app-spinner></app-spinner></router-outlet>\\r\\n                    \\r\\n                </div>    \\r\\n               \\r\\n        </mat-sidenav-content>\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Page container - style you can find in pages.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n    </mat-sidenav-container>\\r\\n</div>\"","import * as $ from 'jquery';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { Router } from '@angular/router';\r\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, ViewChild, HostListener, Directive, AfterViewInit } from '@angular/core';\r\nimport { MenuItems } from '../../shared/menu-items/menu-items';\r\nimport { AppHeaderComponent } from './header/header.component';\r\nimport { AppSidebarComponent } from './sidebar/sidebar.component';\r\n\r\n/** @title Responsive sidenav */\r\n@Component({\r\n  selector: 'app-full-layout',\r\n  templateUrl: 'full.component.html',\r\n  styleUrls: [],\r\n}) \r\nexport class FullComponent implements OnDestroy, AfterViewInit {\r\n  mobileQuery: MediaQueryList;    \r\n      \r\n  private _mobileQueryListener: () => void;\r\n  \r\n  constructor(changeDetectorRef: ChangeDetectorRef, media: MediaMatcher, public menuItems: MenuItems) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n ngAfterViewInit() {\r\n     \r\n } \r\n   \r\n}\r\n","module.exports = \"        \\r\\n<!-- ============================================================== -->\\r\\n<!-- Profile - style you can find in header.scss -->\\r\\n<!-- ============================================================== -->\\r\\n<a href=\\\"https://wrappixel.com/templates/materialpro-angular-dashboard/\\\" class=\\\" m-r-20 hidden-sm-up\\\" mat-raised-button color=\\\"warn\\\">Upgrade To Pro</a>\\r\\n<button [matMenuTriggerFor]=\\\"profile\\\" mat-icon-button class=\\\"m-r-5\\\"> <img src=\\\"assets/images/users/1.jpg\\\" alt=\\\"user\\\" class=\\\"profile-pic\\\"> </button>\\r\\n<mat-menu #profile=\\\"matMenu\\\" class=\\\"mymegamenu\\\">\\r\\n    <button mat-menu-item>\\r\\n        <mat-icon>settings</mat-icon> Settings </button>\\r\\n    <button mat-menu-item>\\r\\n        <mat-icon>account_box</mat-icon> Profile </button>\\r\\n    <button mat-menu-item>\\r\\n        <mat-icon>notifications_off</mat-icon> Disable notifications </button>\\r\\n    <button mat-menu-item>\\r\\n        <mat-icon>exit_to_app</mat-icon> Sign Out </button>\\r\\n</mat-menu>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppHeaderComponent {\r\n    \r\n}\r\n","module.exports = \"<!-- ============================================================== -->\\r\\n<!-- sidebar -->\\r\\n<!-- ============================================================== -->\\r\\n <div class=\\\"user-profile\\\" style=\\\"background: url(assets/images/background/user-info.jpg) no-repeat;\\\">\\r\\n    <!-- User profile image -->\\r\\n    <div class=\\\"profile-img\\\"> <img src=\\\"assets/images/users/profile.png\\\" alt=\\\"user\\\"> </div>\\r\\n    <!-- User profile text-->\\r\\n    <!-- ============================================================== -->\\r\\n    <!-- Profile - style you can find in header.scss -->\\r\\n    <!-- ============================================================== -->\\r\\n    <div class=\\\"profile-text\\\"><a [matMenuTriggerFor]=\\\"sdprofile\\\" class=\\\"\\\"> Markarn Doe <i class=\\\"ti-angle-down font-12 m-l-5\\\"></i></a></div>\\r\\n    <mat-menu #sdprofile=\\\"matMenu\\\" class=\\\"mymegamenu\\\">\\r\\n        <button mat-menu-item>\\r\\n            <mat-icon>settings</mat-icon> Settings </button>\\r\\n        <button mat-menu-item>\\r\\n            <mat-icon>account_box</mat-icon> Profile </button>\\r\\n        <button mat-menu-item>\\r\\n            <mat-icon>notifications_off</mat-icon> Disable notifications </button>\\r\\n        <button mat-menu-item>\\r\\n            <mat-icon>exit_to_app</mat-icon> Sign Out </button>\\r\\n    </mat-menu>\\r\\n    \\r\\n</div>\\r\\n<mat-nav-list appAccordion>\\r\\n    <mat-list-item appAccordionLink *ngFor=\\\"let menuitem of menuItems.getMenuitem()\\\" routerLinkActive=\\\"selected\\\" group=\\\"{{menuitem.state}}\\\">\\r\\n        <a class=\\\"\\\" appAccordionToggle [routerLink]=\\\"['/', menuitem.state]\\\" *ngIf=\\\"menuitem.type === 'link'\\\">\\r\\n            <mat-icon>{{ menuitem.icon }}</mat-icon> \\r\\n            <span>{{ menuitem.name }}</span> \\r\\n            <span fxFlex></span> \\r\\n            <span class=\\\"label label-{{ badge.type }}\\\" *ngFor=\\\"let badge of menuitem.badge\\\">{{ badge.value }}</span> \\r\\n        </a>\\r\\n\\r\\n        \\r\\n    </mat-list-item>\\r\\n\\r\\n</mat-nav-list>\"","import { ChangeDetectorRef, Component, NgZone, OnDestroy, ViewChild, HostListener, Directive, AfterViewInit } from '@angular/core';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { MenuItems } from '../../../shared/menu-items/menu-items';\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppSidebarComponent {\r\n  mobileQuery: MediaQueryList;\r\n  \r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(changeDetectorRef: ChangeDetectorRef, media: MediaMatcher, public menuItems: MenuItems) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n \r\n}","import { Directive, OnInit, AfterViewInit, AfterContentChecked } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\nimport {filter} from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[appAccordion]',\r\n})\r\nexport class AccordionDirective implements AfterContentChecked {\r\n\r\n  protected navlinks: Array<AccordionLinkDirective> = [];\r\n\r\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link !== selectedLink) {\r\n        link.selected = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  addLink(link: AccordionLinkDirective): void {\r\n    this.navlinks.push(link);\r\n  }\r\n\r\n  removeGroup(link: AccordionLinkDirective): void {\r\n    const index = this.navlinks.indexOf(link);\r\n    if (index !== -1) {\r\n      this.navlinks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  checkOpenLinks() {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link.group) {\r\n        const routeUrl = this.router.url;\r\n        const currentUrl = routeUrl.split('/');\r\n        if (currentUrl.indexOf( link.group ) > 0) {\r\n          link.selected = true;\r\n          this.closeOtherLinks(link);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(e => this.checkOpenLinks());\r\n  }\r\n\r\n  constructor( private router: Router) {\r\n    setTimeout(() => this.checkOpenLinks());\r\n  }\r\n}\r\n","import { Directive, HostListener, Inject } from '@angular/core';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionToggle]'\r\n})\r\nexport class AccordionAnchorDirective {\r\n\r\n  protected navlink: AccordionLinkDirective;\r\n\r\n  constructor( @Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\r\n    this.navlink = navlink;\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(e: any) {\r\n    this.navlink.toggle();\r\n  }\r\n}\r\n","import {\r\n  Directive, HostBinding, Inject, Input, OnInit, OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { AccordionDirective } from './accordion.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionLink]'\r\n})\r\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\r\n\r\n  @Input() public group: any;\r\n\r\n  @HostBinding('class.selected')\r\n  @Input()\r\n  get selected(): boolean {\r\n    return this._selected; \r\n  }\r\n\r\n  set selected(value: boolean) {\r\n    this._selected = value;\r\n    if (value) {\r\n      this.nav.closeOtherLinks(this);\r\n    }\r\n  }\r\n\r\n  protected _selected: boolean;\r\n  protected nav: AccordionDirective;\r\n\r\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\r\n    this.nav = nav;\r\n  }\r\n\r\n  ngOnInit(): any {\r\n    this.nav.addLink(this);\r\n    \r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this.nav.removeGroup(this);\r\n  }\r\n\r\n  toggle(): any {\r\n    this.selected = !this.selected;\r\n  }\r\n}\r\n","export * from './accordionanchor.directive';\r\nexport * from './accordionlink.directive';\r\nexport * from './accordion.directive';\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\n\r\nconst MENUITEMS = [\r\n    {state: 'users', name: 'Users', type: 'link', icon: 'av_timer' },\r\n    {state: 'button', type: 'link', name: 'Buttons', icon: 'crop_7_5'},\r\n    {state: 'grid', type: 'link', name: 'Grid List', icon: 'view_comfy'},\r\n    {state: 'lists', type: 'link', name: 'Lists', icon: 'view_list'},\r\n    {state: 'menu', type: 'link', name: 'Menu', icon: 'view_headline'},\r\n    {state: 'tabs', type: 'link', name: 'Tabs', icon: 'tab'},\r\n    {state: 'stepper', type: 'link', name: 'Stepper', icon: 'web'},\r\n    {state: 'expansion', type: 'link', name: 'Expansion Panel', icon: 'vertical_align_center'},\r\n    {state: 'chips', type: 'link', name: 'Chips', icon: 'vignette'},\r\n    {state: 'toolbar', type: 'link', name: 'Toolbar', icon: 'voicemail'},\r\n    {state: 'progress-snipper', type: 'link', name: 'Progress snipper', icon: 'border_horizontal'},\r\n    {state: 'progress', type: 'link', name: 'Progress Bar', icon: 'blur_circular'},\r\n    {state: 'dialog', type: 'link', name: 'Dialog', icon: 'assignment_turned_in'},\r\n    {state: 'tooltip', type: 'link', name: 'Tooltip', icon: 'assistant'},\r\n    {state: 'snackbar', type: 'link', name: 'Snackbar', icon: 'adb'},\r\n    {state: 'slider', type: 'link', name: 'Slider', icon: 'developer_mode'},\r\n    {state: 'slide-toggle', type: 'link', name: 'Slide Toggle', icon: 'all_inclusive'},\r\n    \r\n]; \r\n\r\n@Injectable()\r\n\r\nexport class MenuItems {\r\n  getMenuitem(): Menu[] {\r\n    return MENUITEMS;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { MenuItems } from './menu-items/menu-items';\r\nimport { AccordionAnchorDirective, AccordionLinkDirective, AccordionDirective } from './accordion';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n  ],\r\n  exports: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n   ],\r\n  providers: [ MenuItems ]\r\n})\r\nexport class SharedModule { }\r\n","import {Component, Input, OnDestroy, Inject, ViewEncapsulation} from '@angular/core';\r\nimport {Router, NavigationStart, NavigationEnd, NavigationCancel, NavigationError} from '@angular/router';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-spinner',\r\n    template: `<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\r\n        <div class=\"spinner\">\r\n          <div class=\"double-bounce1\"></div>\r\n          <div class=\"double-bounce2\"></div>\r\n        </div>\r\n    </div>`,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SpinnerComponent implements OnDestroy {\r\n    public isSpinnerVisible = true;\r\n   \r\n    @Input() public backgroundColor = 'rgba(0, 115, 170, 0.69)';\r\n    \r\n    constructor(private router: Router, @Inject(DOCUMENT) private document: Document) {\r\n        this.router.events.subscribe(event => {\r\n            if (event instanceof NavigationStart) {\r\n                this.isSpinnerVisible = true;\r\n            } else if ( event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError) {\r\n                this.isSpinnerVisible = false;\r\n            }\r\n        }, () => {\r\n            this.isSpinnerVisible = false;\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.isSpinnerVisible = false;\r\n    }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  base_url: 'http://127.0.0.1:8000'\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport 'hammerjs';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule) \r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}